<?xml version="1.0" encoding="UTF-8"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" dir="expression">

<unit>
<expr_stmt><expr><noexcept>noexcept</noexcept></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><noexcept>noexcept<argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></noexcept></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>a</name><operator>)</operator><operator>.</operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>a</name><operator>)</operator><operator>-&gt;</operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>a</name><operator>)</operator><operator>-&gt;*</operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>a</name><operator>)</operator><operator>.*</operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><call><name>a</name><argument_list>()</argument_list></call><argument_list>()</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><call><call><name>a</name><argument_list>()</argument_list></call><argument_list>()</argument_list></call><argument_list>()</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <operator>+</operator> <call><call><name>b</name><argument_list>()</argument_list></call><argument_list>()</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name>a</name><argument_list>(<argument><expr><call><call><name>b</name><argument_list>()</argument_list></call><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name>btVector3</name><argument_list>(<argument><expr><operator>(</operator><name>a</name> <operator>&amp;</operator> <block>{ <expr><literal type="number">0x0</literal></expr> }</block> <operator>^</operator> <name>b</name> <operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name>foo</name><argument_list>(<argument><expr><name>args</name><operator>...</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>    

</unit>
