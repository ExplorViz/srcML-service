<?xml version="1.0" encoding="UTF-8"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="Objective-C" dir="operator" filename="operator_m">

<unit>
<expr_stmt><expr><call><name><name>const_cast</name><argument_list>&lt;<argument><name>type</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name><name>static_cast</name><argument_list>&lt;<argument><name>type</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name><name>dynamic_cast</name><argument_list>&lt;<argument><name>type</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name><name>reinterpret_cast</name><argument_list>&lt;<argument><name>type</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><operator>@(</operator> <name>expression</name> <operator>)</operator></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">0</literal></expr><operator>,</operator> <literal type="number">0</literal>]</index></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><name>a</name><index>@[<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <operator>=</operator> <block>@{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>;</expr_stmt>
</unit>

<unit>
<decl_stmt><decl><type><name>int</name></type> <name>a</name> <init>= <expr><block>@{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
</unit>

</unit>
