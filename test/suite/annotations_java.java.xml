<?xml version="1.0" encoding="UTF-8"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" dir="annotation" filename="annotation_java">

<unit>
<function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>speak</name><parameter_list>()</parameter_list> <block>{}</block></function>
</unit>

<unit>
<class type="interface"><specifier>public</specifier> <annotation>@interface</annotation> <name>Twizzle</name> <block>{
  }</block></class>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>Edible</name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></annotation>
  <name>Item</name></type> <name>item</name> =<init> <expr>new <call><name>Carrot</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>Edible</name><argument_list>(<argument><expr><name>value</name> = true</expr></argument>)</argument_list></annotation>
  <name>Item</name></type> <name>item</name> =<init> <expr>new <call><name>Carrot</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>Author</name><argument_list>(<argument><expr><name>first</name> = "Oompah"</expr></argument>, <argument><expr><name>last</name> = "Loompah"</expr></argument>)</argument_list></annotation>
  <name>Book</name></type> <name>book</name> =<init> <expr>new <call><name>Book</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
</unit>

<unit>
<class type="interface"><specifier>public</specifier> <annotation>@interface</annotation> <name>Author</name> <block>{
    <function_decl><type><name>String</name></type> <name>first</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><name>String</name></type> <name>last</name><parameter_list>()</parameter_list>;</function_decl>
  }</block></class>
</unit>

<unit>
<class><annotation>@<name>Entity</name></annotation>
<annotation>@<name>Table</name><argument_list>(<argument><expr><name>name</name> = "people"</expr></argument>)</argument_list></annotation>
class <name>Person</name> <super><implements>implements <name>Serializable</name></implements></super> <block>{}</block></class>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>Id</name></annotation>
<annotation>@<name>GeneratedValue</name><argument_list>(<argument><expr><name>strategy</name> = <name><name>GenerationType</name>.<name>AUTO</name></name></expr></argument>)</argument_list></annotation>
<specifier>private</specifier> <name>Integer</name></type> <name>id</name></decl>;</decl_stmt>
</unit>

<unit>
<function><type><annotation>@<name>Id</name></annotation>
<annotation>@<name>GeneratedValue</name><argument_list>(<argument><expr><name>strategy</name> = <name><name>GenerationType</name>.<name>AUTO</name></name></expr></argument>)</argument_list></annotation>
<specifier>private</specifier> <name>Integer</name></type> <name>id</name><parameter_list>()</parameter_list> <block>{}</block></function>
</unit>

<unit>
<class type="interface"><specifier>public</specifier> <annotation>@interface</annotation> <name>Edible</name> <block>{
<function_decl><type><name>boolean</name></type> <name>value</name><parameter_list>()</parameter_list> default false;</function_decl>
}</block></class>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>a</name><argument_list>(<argument><expr><name>b</name> = <block>{}</block></expr></argument>)</argument_list></annotation></type> <name>c</name></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>a</name><argument_list>(<argument><expr><name>b</name> = <block>{<annotation>@<name>c</name></annotation>}</block></expr></argument>)</argument_list></annotation></type> <name>c</name></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>a</name><argument_list>(<argument><expr><name>b</name> = <block>{<annotation>@<name>c</name></annotation>, <argument><annotation>@<name>d</name></annotation></argument>}</block></expr></argument>)</argument_list></annotation></type> <name>c</name></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><annotation>@<name>a</name><argument_list>(<argument><expr><name><name>b</name>.<name>class</name></name></expr></argument>)</argument_list></annotation></type> <name>c</name></decl>;</decl_stmt>
</unit>

<unit>
<function_decl><type><annotation>@<name>Results</name><argument_list>(<argument><expr><name>value</name> = <block>{ <annotation>@<name>Result</name><argument_list>(<argument><expr><name>javaType</name>=<name><name>List</name>.<name>class</name></name></expr></argument>, <argument><expr><name>many</name>=<annotation>@<name>Many</name><argument_list>(<argument><expr><name>select</name>="getTagsForPost"</expr></argument>)</argument_list></annotation></expr></argument>)</argument_list></annotation> }</block></expr></argument>)</argument_list></annotation>
<name><name>List</name><argument_list>&lt;<argument><name>AnnoPost</name></argument>&gt;</argument_list></name></type> <name>getPosts</name><parameter_list>(<param><decl><type><name>int</name></type> <name>authorId</name></decl></param>)</parameter_list>;</function_decl></unit>

</unit>
