<!DOCTYPE refentry SYSTEM "option.dtd">

<refentry>
<refentryinfo>
    <date>&DATE;</date>
</refentryinfo>
<refmeta>
  <refentrytitle><application>srcml2src</application></refentrytitle><manvolnum>1</manvolnum><refmiscinfo>srcml2src 1.0</refmiscinfo>
</refmeta>
<refnamediv>
  <refname><application>srcml2src</application></refname><refpurpose>translates the XML source-code representation srcML into source code and provides utility features for the srcML format</refpurpose>
</refnamediv>
<refsynopsisdiv>
  <refsynopsisdivinfo>
    <date>2001-01-01</date>
  </refsynopsisdivinfo>
  <cmdsynopsis>
    <command>srcml2src</command>
<arg><option>-nizcgv </option></arg>
<arg><option>&LANGUAGE_FLAG; </option></arg>
<arg><option>&FILENAME_FLAG; </option></arg>
<arg><option>&DIRECTORY_FLAG; </option></arg>
<arg><option>&ENCODING_FLAG; </option></arg>
<arg><option>&TEXTENCODING_FLAG; <replaceable class="parameter">encoding</replaceable></option></arg>
<arg><replaceable class="parameter">input-srcML-file</replaceable></arg>
<arg><replaceable class="parameter">output-source-code-file</replaceable></arg>
  </cmdsynopsis>
</refsynopsisdiv>
<refsect1>
  <refsect1info>
    <date>2006-01-04</date>
  </refsect1info>
  <title>DESCRIPTION</title>
  <para>
    The program <command>srcml2src</command> translates from the XML
    source-code representation srcML into source code.  The srcML
    format allows for XML addressing, querying, and transformation of
    source code.  The srcML format for a source-code file is typically
    produced by <command>src2srcml</command>.
  </para>
  <para>
    The combination of <command>src2srcml</command> and
    <command>srcml2src</command> allows for full round-trip
    transformation of source-code files without any loss of comments,
    white space, and preprocessing statements.
  </para>
  <para>
    Conversion from the srcML format to source code is relatively
    straightforward.  All XML tags are removed and escaped characters
    are unescaped.  The special srcML element for a
    formfeed is converted back to a form-feed character (form-feed
    characters are not allowed in XML, even escaped).
  </para>
  <para>
    In addition to conversion, srcml2src provides various srcML
    utilities such as extracting metadata, extracting individual parts
    of compound srcML files (as both text and XML), and extracting
    metadata from individual parts of compound srcML files.  It can also
    be used to extract all the individual files in a compound srcML file.
  </para>
  <para>
    Using the character - in the place of an input srcML file
    filename uses standard input, and in place of an output source-code file
    uses standard output.
  </para>
</refsect1>
<refsect1>
  <title>OPTIONS</title>
  <variablelist>
    <varlistentry>
      <term><option>&HELP_FLAG_SHORT;, &HELP_FLAG;</option></term>
      <listitem>
	<para>
	  Output the help and exit.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&VERSION_FLAG_SHORT;, &VERSION_FLAG;</option></term>
      <listitem>
	<para>
	  Output the version of srcml2src and exit.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&TEXTENCODING_FLAG_SHORT;, &TEXTENCODING_FLAG;=<replaceable class="parameter">encoding</replaceable></option></term>
      <listitem>
	<para>
	  Sets the encoding used for the output text source-code files
	  to <replaceable>encoding</replaceable>.  The default is &DEFAULT_TEXT_ENCODING;.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&UNIT_FLAG_SHORT;, &UNIT_FLAG;=<replaceable class="parameter">number</replaceable></option></term>
      <listitem>
	<para>
	  Refers to a specific nested unit in a compound srcML file.
	  The numbering starts at 1.  If the number is outside of the
	  range of nested units then the command is ignored.  In
	  combination with the attribute flags, outputs the attribute
	  of that particular unit.  In combination with the <option>&XML_FLAG;</option> option
	  outputs the unit in xml (not as text as is the default).
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&EXPAND_FLAG_SHORT;, &EXPAND_FLAG;</option></term>
      <listitem>
	<para>
	  Extracts all units from a compound srcML file back into
	  source-code files.  The directory and filename used is based
	  on that stored in the directory and filename attributes.
	  Necessary subdirectories are created.  Existing files with
	  the same path will be overwritten.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&XML_FLAG_SHORT;, &XML_FLAG;</option></term>
      <listitem>
	<para>
	  Output is in srcML format.  Used in combination with the
	  <option>&UNIT_FLAG;</option> option to output a particular
	  nested unit in XML.  The output unit has attributes formed
	  by the merger of the attributes of the individual unit and
	  the root unit.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&COMPRESSED_FLAG_SHORT;, &COMPRESSED_FLAG;</option></term>
      <listitem>
	<para>
	  Output is in compressed gzip format.  Only available in the
	  libxml2-enabled version.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NO_XML_DECLARATION_FLAG;</option></term>
      <listitem>
	<para>
	  No output of the default XML declaration.  Only applies to
	  XML output.  Useful when the output is to
	  be placed inside another XML document.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NO_NAMESPACE_DECLARATION_FLAG;</option></term>
      <listitem>
	<para>
	  No output of namespace declarations.  Only applies to XML
	  output.  Useful when the output is to be
	  placed inside another XML document.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&VERBOSE_FLAG_SHORT;, &VERBOSE_FLAG;</option></term>
      <listitem>
	<para>
	  Verbose output to standard error.  Especially useful with
	  the <option>&FILELIST_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
  </variablelist>
</refsect1>
<refsect1>
  <title>Metadata Options</title>
  <para>
    This set of options allows access to the metadata stored in the
    srcML document.  Unless otherwise noted, the metadata is extracted
    from the start root element or the XML declaration and does not
    require traversing the entired document.
  </para>
    <varlistentry>
      <term><option>&LANGUAGE_FLAG_SHORT;, &LANGUAGE_FLAG;</option></term>
      <listitem>
	<para>
	  Output the language of the srcML file as stored in the
	  attribute language in the unit element on standard output.
	  The language is the value of the attribute of the root
	  element unit, unless a particular unit is specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&DIRECTORY_FLAG_SHORT;, &DIRECTORY_FLAG;</option></term>
      <listitem>
	<para>
	  Output the directory of the srcML file as stored in the
	  attribute dir in the unit element on standard output.  The
	  directory is the value of the attribute of the root element
	  unit, unless a particular unit is specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&FILENAME_FLAG_SHORT;, &FILENAME_FLAG;</option></term>
      <listitem>
	<para>
	  Output the filename of the srcML file as stored in the
	  attribute filename in the unit element on standard output.
	  The filename is the value of the attribute of the root
	  element unit, unless a particular unit is specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&SRCVERSION_FLAG_SHORT;, &SRCVERSION_FLAG;</option></term>
      <listitem>
	<para>
	  Output the version of the srcML file as stored attribute
	  version in the unit element on standard output.  The version
	  is the value of the attribute of the root element unit,
	  unless a particular unit is specified with the
	  <option>&UNIT_FLAG;</option> option.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NAMESPACE_FLAG_SHORT;, &NAMESPACE_FLAG;=<replaceable class="parameter">uri</replaceable></option></term>
      <listitem>
	<para>
	  Output the prefix of the namespace given by uri.  The name of
	  the prefix is output with a newline character.  The default
	  namespace is a blank line.  If the URI does not match a
	  namespace declaration then no line is output.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&NESTED_FLAG_SHORT;, &NESTED_FLAG;</option></term>
      <listitem>
	<para>
	  Output the number of nested units in a compound srcML file
	  on standard output.  Result is 0 if the srcML file is not
	  compound.  Requires traversal of the entire document.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&INFO_FLAG_SHORT;, &INFO_FLAG;</option></term>
      <listitem>
	<para>
	  Output most of the metadata of the srcML file.  Each
	  individual piece of data, i.e., namespaces, encoding,
	  language, directory, filename, and version, is on a separate
	  line.  The form of the information is that same as that of
	  the full flag option to src2srcml to form it, without the
	  leading "--".
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>&LONG_INFO_FLAG_SHORT;, &LONG_INFO_FLAG;</option></term>
      <listitem>
	<para>
	  Output the metadata of the <option>&INFO_FLAG;</option>
	  option along with the count of the nested units in a
	  compound srcML document.  This information requires the
	  examination of the entire srcML document.
	</para>
      </listitem>
    </varlistentry>
</refsect1>
<refsect1>
  <title>USAGE</title>
  <para>
    To translate the srcML file main.cpp.xml into the C++ source-code file main.cpp:
  </para>
  <para>
    <command>srcml2src</command> main.cpp.xml main.cpp
  </para>
  <para>
    To extract the language of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &LANGUAGE_FLAG; main.c.xml
  </para>
  <para>
    To extract the directory of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &DIRECTORY_FLAG; main.c.xml
  </para>
  <para>
    To extract the filename of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &FILENAME_FLAG; main.c.xml
  </para>
  <para>
    To extract the version of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &VERSION_FLAG; main.c.xml
  </para>
  <para>
    To extract the xml encoding of the srcML file main.cpp.xml:
  </para>
  <para>
    <command>srcml2src</command> &ENCODING_FLAG; main.c.xml
  </para>
</refsect1>
<refsect1>
  <title>RETURN STATUS</title>

  <para>&STATUS_SUCCESS;: Normal</para>
  <para>&STATUS_ERROR;: Error </para>
  <para>&STATUS_INPUTFILE_PROBLEM;: Problem with input file</para>
  <para>&STATUS_UNKNOWN_OPTION;: Unknown option</para>
  <para>&STATUS_UNKNOWN_ENCODING;: Unknown encoding</para>
  <para>&STATUS_LIBXML2_FEATURE;: Libxml2-only feature (not libxml2 enabled)</para>
  <para>&STATUS_SRCENCODING_MISSING;: Text encoding option specified, but value missing</para>
  <para>&STATUS_UNIT_MISSING;: Unit option specified, but value missing</para>
  <para>&STATUS_UNIT_INVALID;: Unit option value is not valid</para>
  <para>&STATUS_INVALID_OPTION_COMBINATION;: Invalid combination of options</para>
  <para>&STATUS_TERMINATED;: Incomplete output due to termination</para>

</refsect1>
<refsect1>
  <title>CAVEATS</title>
  <para>
    Line endings are normalized in XML and in the srcML format.
  </para>
</refsect1>
<refsect1>
  <title>BUGS</title>
  <para>
    There may be some parts of XML (e.g., comments) unused in the srcML format (i.e., not generated by src2srcml)
    which are not preserved in the output with the <option>&XML_FLAG;</option> option.
  </para>
</refsect1>
<refsect1>
  <title>SEE ALSO</title>
  <para>
    <command>src2srcml</command>(1)
  </para>
</refsect1>
<refsect1>
  <title>AUTHOR</title>
  <para>Written by 
    <author>
      <firstname>Michael</firstname>
      <othername role="mi">L.</othername>
      <surname>Collard</surname>
      <contrib>Original author</contrib>
    </author> 
    and
    <author>
      <firstname>Huzefa</firstname>
      <surname>Kagdi</surname>
      <contrib>Original author</contrib>
    </author>
  </para>
</refsect1>
</refentry>