#content {
    margin-top:3em;
    margin-left:15em;
    margin-right:15em;
}

/* ToC styles. */
table.ToC {
    border-collapse: collapse;
    border:.1em solid #D2D2CE;
    margin-left:0px;
    margin-right:0px;
    width:100%;
}

table.ToC th{
    padding-top:1em;
}
table.ToC tbody tr:nth-child(odd) {
   background-color: #F0F0F0;
}

table.ToC thead {
    border-collapse: collapse;
}
table.ToC td {
    border-collapse: collapse;
    border-left:1px solid #D2D2CE;
    padding:2px;
    padding-left:5px;
}
table.ToC tbody {
    border:1px solid #D0D0D0;
}

table.ToC th.categoryRow {
    padding-top: 2em;
    font-weight: bold;
    background-color: #ffffff;
    text-align:left;
    padding-left:3px;
    padding-bottom:.3em;
}

table.ToC tbody tr td:nth-child(1) {
    border-left:0px solid black;
}

/* Sub headers. */

/* Examples Displays. */
.sourceCodeExample { }

.srcMLExample { }

/* The link color for anchors for titles. */
div.displayedDocDefinition h2.title a{
    color:black;
    text-decoration:none;
}
div.displayedDocDefinition h2.title a:hover{
    color:black;
    text-decoration:none;
}



/* Doc display page. */
.displayedDocDefinition {
    padding:.5em;
    padding-top:10px;
    border:1px solid black;
    margin-top:1em;
    margin-right:0em;
    margin-left:0em;
    border: 1px solid #D2D2CE;
    border-radius:1em;
    box-shadow: 0.3em 0.3em 0.3em #888888;
}

.opTitle {
}

.opCodeCol {
} 

.opsrcMLCol {
}


pre {
    padding: 10px;
    overflow:auto;
}

.xpathQueryExample {
}

/** Syntax Highlighting for srcML Markup. */
.srcMLElement {
    font-weight: normal;
    color:#3333FF;
}

.srcMLAttribName {
    font-weight: normal;
    color:#FF4D4D;
}

.srcMLAttribEquals {
    font-weight: normal;
    color:#FF4D4D;
}

.srcMLAttribValue {
    font-weight: normal;
    color:#C5C545;
}

/** Syntax Highlighting for all srcML languages (but not the XML representation). */

/*
    This helps with SOME keywords not all of them, just the ones which are more
    difficult to locate because they are part of mixed content OR they are
    marked up as src:name
*/
.kw {
    color:orange;
    font-weight:bold;
}

/* Preprocessor highlighting*/
.cpp_define {
    color:#B84DDB;
}

.cpp_directive {
    color:#B84DDB;
}

.cpp_macro {
    color:black;
}

.cpp_value {
    color:black;
    font-weight: normal;
}

.cpp_undef {
    color:#B84DDB;
}

span.cpp_if span.kw {
    color:#B84DDB;
}
span.cpp_else span.kw {
    color:#B84DDB;
}

span.cpp_undef span.src_name {
    color:black;
}

.cpp_if {
    color:#B84DDB;
}

.cpp_ifdef {
    color:#B84DDB;
}

.cpp_endif {
    color:#B84DDB;
}

.cpp_ifndef {
    color:#B84DDB;
}

.cpp_else {
    color:#B84DDB;
}

.cpp_elif {
    color:#B84DDB;
}

.cpp_include {
    color:#B84DDB;
}

.cpp_file {
    color:#C5C545;
    font-weight:bold;
}

.cpp_pragma {
    color:#B84DDB;
}

.cpp_error {
    color:#B84DDB;
}

.cpp_line {
    color:#B84DDB;
}

.cpp_number {
    color:#33cc33;
}

.type_modifier {
    font-weight:normal;
    color:black;
}

.op_operator {
    font-weight:normal;
    color:black;
}

.lit_literal {
    color:#C5C545;
    font-weight:bold;
}

.src_name {

}

.src_name {
}

.src_parameter_list {
}

.src_param {
}

.src_type { 
}

.src_expr {
}

.src_if {
}

.src_condition {
}

.src_then {
}

.src_block {
}

.src_expr_stmt {
}

.src_call {
}

.src_argument_list {
}

.src_argument {
}

.src_comment {
    color:#009900;
}

.src_else {
}

.src_elseif {
}

.src_while {
}

.src_index {
}

.src_for {
}

.src_init {
}

.src_incr {
}

.src_decl {
}

.src_do {
}

.src_decl_stmt {
}

.src_break {
}

.src_continue {
}

.src_return {
}

.src_switch {
}

.src_case {
}

.src_default {
}

.src_label {
}

.src_goto {
}

.src_empty_stmt {
}

.src_specifier {
}

.src_extern {
}

.src_function_decl {
}

.src_function {
}

.src_typedef {
}

.src_struct {
}

.src_range {
}

.src_struct_decl {
}

.src_union_decl {
}

.src_union {
}

.src_enum {
}

.src_sizeof {
}

.src_alignas {
}

.src_alignof {
}

.src_atomic {
}

.src_generic_selection {
}

.src_selector {
}

.src_association_list {
}

.src_association {
}

.src_assert {
}

