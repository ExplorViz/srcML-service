<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" dir="generics">

<unit>
<class><specifier>public</specifier> class <name><name>Class</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <block>{}</block></class>
</unit>

<unit>
<decl_stmt><decl><type><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>c</name></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>c</name> =<init> <expr>new <call><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>c</name> =<init> <expr>new <call><name><name>Class</name><argument_list>&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>c</name> =<init> <expr>new <call><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
</unit>

<unit>
<function><type><specifier>public</specifier> <argument_list>&lt;<argument><name>U</name></argument>&gt;</argument_list> <name>void</name></type> <name>f</name><parameter_list>(<param><decl><type><name>U</name></type> <name>u</name></decl></param>)</parameter_list> <block>{}</block></function>
</unit>

<unit>
<constructor><type><specifier>public</specifier> <argument_list>&lt;<argument><name>U</name></argument>&gt;</argument_list></type> <name>Class</name><parameter_list>(<param><decl><type><name>U</name></type> <name>u</name></decl></param>)</parameter_list> <block>{}</block></constructor>
</unit>

<unit>
<decl_stmt><decl><type><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>c</name> =<init> <expr>new <argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list> <call><name><name>Class</name><argument_list>&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr>""</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
</unit>

<unit>
<class><specifier>public</specifier> class <name><name>Class</name><argument_list>&lt;<argument><name>T</name> <extends>extends <name>Object</name></extends></argument>&gt;</argument_list></name> <block>{}</block></class>
</unit>

<unit>
<class><specifier>public</specifier> class <name><name>Class</name><argument_list>&lt;<argument>? <extends>extends <name>Object</name></extends></argument>&gt;</argument_list></name> <block>{}</block></class>
</unit>

<unit>
<class><specifier>public</specifier> class <name><name>Class</name><argument_list>&lt;<argument>T <implements>implements <name>Object</name></implements></argument>&gt;</argument_list></name> <block>{}</block></class>
</unit>

<unit>
<class><specifier>public</specifier> class <name><name>Class</name><argument_list>&lt;<argument>? <implements>implements <name>Object</name></implements></argument>&gt;</argument_list></name> <block>{}</block></class>
</unit>

</unit>
