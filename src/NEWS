NEWS

Release of Jan-30-2006-Beta

This version of the srcML translator include numerous bug fixes, improved set of features
using using libxml2, and many more options.  In addition, the documentation has been
greatly improved with particular emphasis on the name/usage of options.

Major changes:

	* Support for compound srcML documents (i.e., many individual srcML documents
	nested in one large srcML document) both for creation and extraction.  As an example,
	the entire linux kernel can be translated (and extracted) to/from a single srcML
	file.

	* A compound srcML file can be specified using a file that contains a list of multiple
	input files.

New libxml2 features:

	* Automatic conversion from source encoding to XML encoding for src2srcml,
	and XML encoding to source encoding for srcml2src.  Both encodings can be
	specified

	* Compressed (gzip) output from src2srcml.  These compressed files are automatically
	detected and used with srcml2src.

Markup changes:

	* Default xml encoding (libxml2 version) is now UTF-8 with default source encoding based on locale.
	The non-libxml2 version still uses ISO-8859-1 for the default encoding with no automatic 
	encoding conversion done.

	* Form feeds are now stored using new empty element <formfeed/>.  Extraction
	using srcml2src will convert this element back to a form feed character.

	* New optional attribute "version" on unit element allows for differentiation between
	individual units in compound srcML.

	* The attribute "standalone" with a value of "yes" has been added to the XML declaration.

Misc changes:

	* New option for srcml2src to extract encoding.

	* Reworking of options with more consistency between src2srcml and srcml2src.

	* Improved verbose option.

	* Removed append handling.  New options for specifying multiple input files make it unnecessary.

	* More intelligent handling of unit attributes for units inside of compound nested documents.

	* Return status codes for src2srcml and srcml2src.

	* Manual pages are available.

Build changes:

	* Allow for libxml and non-libxml builds of src2srcml.  Currently, srcml2src is only available with a
	libxml build.

	* Remove special handling for ANTLR bug in 2.7.5.

And (as always) bug fixes.



Release of Aug-29-2005-Beta

It has been a long time between releases.  Development continued during that 
time especially with regards to robustness.  In spite of increased robustness,
speed of translation remains over 11,000 LOC/second.

Major New Features

	* There is preliminary support for Java.  It is available using the 
	options "--language Java" or "-l Java".  Most of the common statements
	between Java and C++ work, the import and package statements work, and
	classes work.  	More work needs to be done on testing on large Java
	code bases.

	* Old K&R C function parameter declarations are now handled.  This is 
	only available in C mode under the options "--language C" and "-l C".

	* srcml2src is now available in a Windows build.

There have been some markup changes:

	* A macro statement (a macro with a terminating semicolon) now does not 
	include the semicolon

	* Line comments no longer include the end-of-line character inside of 
	the element

	* Remove initial special newline whitespace after the start element of 
	unit

	* Language attribute on element unit is now always inserted

	* The translator now outputs a default XML declaration.  This allows 
	for proper encoding type to be given and clears up some problems with
	special characters.  An alternate encoding can be specified
	on the command line using the option "--encoding UTF-8 or "-e UTF-8".
	If a blank encoding is specified using the option '--encoding ""' or 
	'-i UTF-8' then no XML declaration is issued.

The debug mode is now more properly integrated:

	* New option for marking translation errors with proper namespace

	* Changed names of error mode elements to "srcmlerr:parse" and 
	"srcmlerr:mode" to better reflect different problems

Translator interface has been improved:

	* Options can now be specified in any order

	* Unrecognized options are properly handled

	* Single options (those without parameters) can be grouped 
	
Extended Mode

	* Hidden extended mode for marking literals "--extended" or "-x"

	* More options will follow
